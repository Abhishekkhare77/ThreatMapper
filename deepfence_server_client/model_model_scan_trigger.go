/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the ModelScanTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelScanTrigger{}

// ModelScanTrigger struct for ModelScanTrigger
type ModelScanTrigger struct {
	BinArgs map[string]string `json:"bin_args"`
	Hostname string `json:"hostname"`
	NodeId string `json:"node_id"`
	ResourceId string `json:"resource_id"`
	ResourceType int32 `json:"resource_type"`
}

// NewModelScanTrigger instantiates a new ModelScanTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelScanTrigger(binArgs map[string]string, hostname string, nodeId string, resourceId string, resourceType int32) *ModelScanTrigger {
	this := ModelScanTrigger{}
	this.BinArgs = binArgs
	this.Hostname = hostname
	this.NodeId = nodeId
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	return &this
}

// NewModelScanTriggerWithDefaults instantiates a new ModelScanTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelScanTriggerWithDefaults() *ModelScanTrigger {
	this := ModelScanTrigger{}
	return &this
}

// GetBinArgs returns the BinArgs field value
// If the value is explicit nil, the zero value for map[string]string will be returned
func (o *ModelScanTrigger) GetBinArgs() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.BinArgs
}

// GetBinArgsOk returns a tuple with the BinArgs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelScanTrigger) GetBinArgsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.BinArgs) {
		return nil, false
	}
	return &o.BinArgs, true
}

// SetBinArgs sets field value
func (o *ModelScanTrigger) SetBinArgs(v map[string]string) {
	o.BinArgs = v
}

// GetHostname returns the Hostname field value
func (o *ModelScanTrigger) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *ModelScanTrigger) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *ModelScanTrigger) SetHostname(v string) {
	o.Hostname = v
}

// GetNodeId returns the NodeId field value
func (o *ModelScanTrigger) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelScanTrigger) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelScanTrigger) SetNodeId(v string) {
	o.NodeId = v
}

// GetResourceId returns the ResourceId field value
func (o *ModelScanTrigger) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ModelScanTrigger) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ModelScanTrigger) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *ModelScanTrigger) GetResourceType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *ModelScanTrigger) GetResourceTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *ModelScanTrigger) SetResourceType(v int32) {
	o.ResourceType = v
}

func (o ModelScanTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelScanTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BinArgs != nil {
		toSerialize["bin_args"] = o.BinArgs
	}
	toSerialize["hostname"] = o.Hostname
	toSerialize["node_id"] = o.NodeId
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["resource_type"] = o.ResourceType
	return toSerialize, nil
}

type NullableModelScanTrigger struct {
	value *ModelScanTrigger
	isSet bool
}

func (v NullableModelScanTrigger) Get() *ModelScanTrigger {
	return v.value
}

func (v *NullableModelScanTrigger) Set(val *ModelScanTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableModelScanTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableModelScanTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelScanTrigger(val *ModelScanTrigger) *NullableModelScanTrigger {
	return &NullableModelScanTrigger{value: val, isSet: true}
}

func (v NullableModelScanTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelScanTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


